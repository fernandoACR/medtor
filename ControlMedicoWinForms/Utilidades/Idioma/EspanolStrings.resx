<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EspecialidadAgregada" xml:space="preserve">
    <value>Especialidad agregada correctamente</value>
  </data>
  <data name="menuCita" xml:space="preserve">
    <value>Citas</value>
  </data>
  <data name="menuCliente" xml:space="preserve">
    <value>Clientes</value>
  </data>
  <data name="menuDiagnostico" xml:space="preserve">
    <value>Diagnosticos</value>
  </data>
  <data name="menuMedico" xml:space="preserve">
    <value>Medicos</value>
  </data>
  <data name="menuMiCuenta" xml:space="preserve">
    <value>Administración</value>
  </data>
  <data name="menuOrden" xml:space="preserve">
    <value>Ordenes</value>
  </data>
  <data name="menuPaciente" xml:space="preserve">
    <value>Pacientes</value>
  </data>
  <data name="menuReceta" xml:space="preserve">
    <value>Recetas</value>
  </data>
  <data name="menuSalir" xml:space="preserve">
    <value>Cerrar Sesión</value>
  </data>
  <data name="NombreAplicacion" xml:space="preserve">
    <value>MedTor</value>
  </data>
  <data name="SeleccionarEspecialidad" xml:space="preserve">
    <value>Debe seleccionar una especialidad</value>
  </data>
  <data name="CitaAgregada" xml:space="preserve">
    <value>Cita agregada correctamente</value>
  </data>
  <data name="CitaEditada" xml:space="preserve">
    <value>Cita editada correctamente</value>
  </data>
  <data name="ConfirmarCancelar" xml:space="preserve">
    <value>¿Seguro que desea cancelar?</value>
  </data>
  <data name="EspecialidadEditada" xml:space="preserve">
    <value>Especialidad editada correctamente</value>
  </data>
  <data name="EspecimenAgregado" xml:space="preserve">
    <value>Especimen agregado correctamente</value>
  </data>
  <data name="EspecimenEditado" xml:space="preserve">
    <value>Especimen editado correctamente</value>
  </data>
  <data name="MedicamentoAgregado" xml:space="preserve">
    <value>Medicamento agregado correctamente</value>
  </data>
  <data name="MedicamentoEditado" xml:space="preserve">
    <value>Medicamento editado correctamente</value>
  </data>
  <data name="PatologiaAgregada" xml:space="preserve">
    <value>Patologia agregada correctamente</value>
  </data>
  <data name="PatologiaEditada" xml:space="preserve">
    <value>Patologia editada correctamente</value>
  </data>
  <data name="SeleccionarCita" xml:space="preserve">
    <value>Debe seleccionar una cita</value>
  </data>
  <data name="SeleccionarEspecimen" xml:space="preserve">
    <value>Debe seleccionar un especimen</value>
  </data>
  <data name="SeleccionarMedicamento" xml:space="preserve">
    <value>Debe seleccionar un medicamento</value>
  </data>
  <data name="SeleccionarPatologia" xml:space="preserve">
    <value>Debe seleccionar una patologia</value>
  </data>
  <data name="TextoCampoClave" xml:space="preserve">
    <value>Clave</value>
  </data>
  <data name="TextoCampoDescripcion" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="TextoCampoPaciente" xml:space="preserve">
    <value>Paciente</value>
  </data>
  <data name="TextoCampoTitulo" xml:space="preserve">
    <value>Titulo</value>
  </data>
  <data name="PacienteAgregado" xml:space="preserve">
    <value>Paciente agregado correctamente</value>
  </data>
  <data name="PacienteEditado" xml:space="preserve">
    <value>Paciente editado correctamente</value>
  </data>
  <data name="TextoCampoCorreo" xml:space="preserve">
    <value>Correo Eléctronico</value>
  </data>
  <data name="TextoCampoGenero" xml:space="preserve">
    <value>Genero</value>
  </data>
  <data name="TextoCampoNombreFamiliar" xml:space="preserve">
    <value>Familiar de Contacto</value>
  </data>
  <data name="TextoCampoPrimerApellido" xml:space="preserve">
    <value>Primer Apellido</value>
  </data>
  <data name="TextoCampoPrimerNombre" xml:space="preserve">
    <value>Primer Nombre</value>
  </data>
  <data name="TextoCampoTelefono" xml:space="preserve">
    <value>Teléfono</value>
  </data>
  <data name="TextoBtnCancelar" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="TextoBtnSalir" xml:space="preserve">
    <value>Salir</value>
  </data>
  <data name="ConfiguracionGuardada" xml:space="preserve">
    <value>Se ha guardado la nueva configuración, debe volver a iniciar sesión para que  tenga efecto.</value>
  </data>
  <data name="MedicoAgregado" xml:space="preserve">
    <value>Médico agregado correctamente</value>
  </data>
  <data name="UsuarioAgregado" xml:space="preserve">
    <value>Usuario agregado correctamente</value>
  </data>
  <data name="TextoBtnEditar" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="TextoBtnGuardar" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="ConfirmarEliminarUsuario" xml:space="preserve">
    <value>¿Seguro que desea eliminar el usuario seleccionado?</value>
  </data>
  <data name="UsuarioEliminado" xml:space="preserve">
    <value>Usuario eliminado correctamente</value>
  </data>
  <data name="ConfirmarEliminarCita" xml:space="preserve">
    <value>¿Seguro que desea eliminar la cita seleccionada?</value>
  </data>
  <data name="ConfirmarImprimirOrden" xml:space="preserve">
    <value>¿Desea imprimir la orden?</value>
  </data>
  <data name="ConfirmarSalir" xml:space="preserve">
    <value>¿Salir del sistema?</value>
  </data>
  <data name="DiagnosticoAgregado" xml:space="preserve">
    <value>Diagnostico agregado correctamente, ¿Desea agregar una receta?</value>
  </data>
  <data name="DiagnosticoEditado" xml:space="preserve">
    <value>Diagnostico editado correctamente, ¿Desea agregar una receta?</value>
  </data>
  <data name="OrdenAgregada" xml:space="preserve">
    <value>Orden guardada correctamente</value>
  </data>
  <data name="OrdenEditada" xml:space="preserve">
    <value>Orden editada correctamente</value>
  </data>
  <data name="TextoCampoComentarios" xml:space="preserve">
    <value>Comentarios</value>
  </data>
  <data name="TextoCampoEspecimen" xml:space="preserve">
    <value>Especimen</value>
  </data>
  <data name="TextoCampoMedico" xml:space="preserve">
    <value>Médico</value>
  </data>
  <data name="GridCampoEstadoCivil" xml:space="preserve">
    <value>Estado Civil</value>
  </data>
  <data name="GridCampoMovil" xml:space="preserve">
    <value>Movil</value>
  </data>
  <data name="GridCampoNombre" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="GridCampoTelefono" xml:space="preserve">
    <value>Telefono</value>
  </data>
  <data name="menuAgregar" xml:space="preserve">
    <value>Agregar</value>
  </data>
  <data name="menuEditar" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="menuEliminar" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="menuExpediente" xml:space="preserve">
    <value>Expediente</value>
  </data>
</root>